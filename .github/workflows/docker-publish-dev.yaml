name: Publish Docker Image to Github Package

on:
  push:
    branches:
      - dev
  workflow_dispatch:

env:
  FULL_IMAGE_NAME: ${{ secrets.REGISTRY_LOGIN_SERVER }}/cloudnative-backend-dev:${{ github.sha }}
  KUBERNETES_NAMESPACE: backend-dev

jobs:
  build-and-deploy:
    runs-on: [self-hosted, az-logged-in]
    steps:
      - name: 'checkout gitHub actions'
        uses: actions/checkout@v3

      #      - name: 'Login via Azure CLI'
      #        uses: azure/login@v1
      #        with:
      #          creds: ${{ secrets.AZURE_CREDENTIALS }}
      #
      #      - name: Login to ACR
      #        run: az acr login --name ${{ secrets.REGISTRY_NAME }}

      - name: 'set up docker buildx'
        uses: docker/setup-buildx-action@v3

#      - name: 'cache docker layers'
#        uses: actions/cache@v3
#        with:
#          path: /tmp/.buildx-cache
#          key: ${{ runner.os }}-buildx-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-buildx-

      - name: 'build docker image'
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache \
            --tag $FULL_IMAGE_NAME \
            --load .

#      - name: 'scan docker image with trivy'
#        uses: aquasecurity/trivy-action@master
#        with:
#          image-ref: ${{ env.FULL_IMAGE_NAME }}
#          format: table
#          exit-code: 1
#          ignore-unfixed: true

      #      - name: 'get AKS credentials'
      #        run: |
      #          az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_AKS_NAME }}

      - name: 'create namespace if not exists'
        run: |
          kubectl create namespace ${{ env.KUBERNETES_NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -

      - name: 'create acr pull secret'
        run: |
          kubectl create secret docker-registry acr-registry \
            --namespace ${{ env.KUBERNETES_NAMESPACE }} \
            --docker-server=${{ secrets.REGISTRY_LOGIN_SERVER }} \
            --docker-username=${{ secrets.REGISTRY_USERNAME }} \
            --docker-password=${{ secrets.REGISTRY_PASSWORD }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: 'create or update secrets'
        run: |
          kubectl create secret generic dev-secret \
            --from-literal=MARIADB_URL="${{ secrets.PROD_MARIADB_URL }}" \
            --from-literal=MARIADB_DATABASE="${{ secrets.PROD_MARIADB_DATABASE }}" \
            --from-literal=MARIADB_USERNAME="${{ secrets.PROD_MARIADB_USERNAME }}" \
            --from-literal=MARIADB_PASSWORD="${{ secrets.PROD_MARIADB_PASSWORD }}" \
            --from-literal=REDIS_HOST="${{ secrets.PROD_REDIS_HOST }}" \
            --from-literal=REDIS_PORT="${{ secrets.PROD_REDIS_PORT }}" \
            --from-literal=REDIS_PASSWORD="${{ secrets.PROD_REDIS_PASSWORD }}" \
            --from-literal=KAFKA_BOOTSTRAP_SERVERS="${{ secrets.PROD_KAFKA_BOOTSTRAP_SERVERS }}" \
            --namespace ${{ env.KUBERNETES_NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -

      - name: 'push docker image'
        run: |
          docker push ${{ env.FULL_IMAGE_NAME }}

      - name: 'update image tag in manifests'
        run: |
          sed -i.bak "s|image: .*/cloudnative-backend-dev:.*|image: $FULL_IMAGE_NAME|" kubernetes/deployment.yaml
          rm kubernetes/deployment.yaml.bak

      - name: 'commit and push changes'
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/kt-cloudnative-04/core-backend
          git add kubernetes/deployment.yaml
          git commit -m "Update docker image tag" || echo "No changes to commit"
          git push || echo "Push failed but continuing"
